-- Create the customers table
create table customer1 (
    customer_id int primary key, customer_name varchar(32),
    city varchar(20), grade int, salesman_id int);

-- Insert values into it
INSERT ALL
    INTO customer1 VALUES (3002, 'Nick Rimando', 'New York', 100, 5001)
    INTO customer1 VALUES (3007, 'Brad Davis', 'New York', 200, 5001)
    INTO customer1 VALUES (3005, 'Graham Zusi', 'California', 200, 5002)
    INTO customer1 VALUES (3008, 'Julian Green', 'London', 300, 5002)
    INTO customer1 VALUES (3004, 'Fabian Johnson', 'Paris', 300, 5006)
    INTO customer1 VALUES (3009, 'Geoff Cameron', 'Berlin', 100, 5003)
    INTO customer1 VALUES (3003, 'Jozy Altidor', 'Moscow', 200, 5007)
    INTO customer1 VALUES (3001, 'Brad Guzan', 'London', 300, 5005)
SELECT 1 FROM DUAL;

-- Write a query that produces the name and number of each salesman and each customer with more than one current order. Put the results in alphabetical order
SELECT customer_id, customer_name FROM customer1 a
WHERE 1<(SELECT COUNT(*) FROM orders b WHERE a.customer_id = b.customer_id)
UNION
SELECT salesman_id, name FROM salesman a
WHERE 1<(SELECT COUNT(*) FROM orders b WHERE a.salesman_id = b.salesman_id)
ORDER BY customer_name;

-- Write a query to make a report of which salesman produce the largest and smallest orders on each date.
SELECT a.salesman_id, name, order_no, 'highest on', order_date FROM salesman a, orders b
WHERE a.salesman_id=b.salesman_id
AND b.purchase_amount=(SELECT MAX(purchase_amount) FROM orders c WHERE c.order_date = b.order_date)
UNION
SELECT a.salesman_id, name, order_no, 'lowest on', order_date FROM salesman a, orders b
WHERE a.salesman_id=b.salesman_id
AND b.purchase_amount=(SELECT MIN(purchase_amount) FROM orders c WHERE c.order_date = b.order_date);